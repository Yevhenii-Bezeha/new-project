{"ast":null,"code":"import { signal, WritableSignal } from '@angular/core';\nimport { OctokitGeneralService } from 'shared-core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"shared-core\";\nexport let RepositoryService = /*#__PURE__*/(() => {\n  var _class;\n  class RepositoryService {\n    constructor(octokitGeneralService) {\n      this.octokitGeneralService = octokitGeneralService;\n      this.repository = signal(null);\n    }\n    getRepositoryDetails() {\n      return this.repository();\n    }\n    setRepositoryDetails(repository) {\n      this.repository.set(repository);\n    }\n    getRepositoriesList(options) {\n      return this.octokitGeneralService.convertToObservable(this.octokitGeneralService.rest().search.repos({\n        order: 'desc',\n        sort: 'stars',\n        q: 'is:public stars:>10',\n        per_page: options.per_page,\n        page: options.page\n      }));\n    }\n    getIssuesPerRepo(repositoryFullName, options) {\n      return this.octokitGeneralService.convertToObservable(this.octokitGeneralService.rest().search.issuesAndPullRequests({\n        q: `repo:${repositoryFullName} is:open`,\n        order: 'desc',\n        sort: 'comments',\n        per_page: options.per_page,\n        page: options.page\n      }));\n    }\n  }\n  _class = RepositoryService;\n  _class.ɵfac = function RepositoryService_Factory(t) {\n    return new (t || _class)(i0.ɵɵinject(i1.OctokitGeneralService));\n  };\n  _class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: _class,\n    factory: _class.ɵfac,\n    providedIn: 'root'\n  });\n  return RepositoryService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}