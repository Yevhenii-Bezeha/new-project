{"ast":null,"code":"import { Octokit } from 'octokit';\nimport { from, defer } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let OctokitGeneralService = /*#__PURE__*/(() => {\n  var _class;\n  class OctokitGeneralService {\n    auth(key) {\n      this.OCTOKIT_CONNECTION = new Octokit({\n        auth: key\n      });\n      return this.convertToObservable(this.OCTOKIT_CONNECTION.rest.users.getAuthenticated());\n    }\n    convertToObservable(promise) {\n      return defer(() => from(promise));\n    }\n    rest() {\n      // TODO: Fix once rest supports copilot, due to @octokit/plugin-rest-endpoint-methods change\n      return this.OCTOKIT_CONNECTION.rest;\n    }\n  }\n  _class = OctokitGeneralService;\n  _class.ɵfac = function OctokitGeneralService_Factory(t) {\n    return new (t || _class)();\n  };\n  _class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: _class,\n    factory: _class.ɵfac,\n    providedIn: 'root'\n  });\n  return OctokitGeneralService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}