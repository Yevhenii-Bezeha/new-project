{"ast":null,"code":"function t(t, n, r, e, i, a, o) {\n  try {\n    var u = t[a](o),\n      c = u.value;\n  } catch (t) {\n    return void r(t);\n  }\n  u.done ? n(c) : Promise.resolve(c).then(e, i);\n}\nfunction n(n) {\n  return function () {\n    var r = this,\n      e = arguments;\n    return new Promise(function (i, a) {\n      var o = n.apply(r, e);\n      function u(n) {\n        t(o, i, a, u, c, \"next\", n);\n      }\n      function c(n) {\n        t(o, i, a, u, c, \"throw\", n);\n      }\n      u(void 0);\n    });\n  };\n}\nfunction r(t) {\n  for (var n = new ArrayBuffer(t.length), r = new Uint8Array(n), e = 0, i = t.length; e < i; e++) r[e] = t.charCodeAt(e);\n  return n;\n}\nfunction e(t) {\n  return t.replace(/=/g, \"\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n}\nfunction i(t) {\n  return e(btoa(JSON.stringify(t)));\n}\nvar a = function () {\n  var t = n(function* (t) {\n    var {\n      privateKey: n,\n      payload: a\n    } = t;\n    if (/BEGIN RSA PRIVATE KEY/.test(n)) throw new Error(\"[universal-github-app-jwt] Private Key is in PKCS#1 format, but only PKCS#8 is supported. See https://github.com/gr2m/universal-github-app-jwt#readme\");\n    var o,\n      u = {\n        name: \"RSASSA-PKCS1-v1_5\",\n        hash: {\n          name: \"SHA-256\"\n        }\n      },\n      c = (o = n.trim().split(\"\\n\").slice(1, -1).join(\"\"), r(atob(o))),\n      p = yield crypto.subtle.importKey(\"pkcs8\", c, u, !1, [\"sign\"]),\n      f = function (t, n) {\n        return \"\".concat(i(t), \".\").concat(i(n));\n      }({\n        alg: \"RS256\",\n        typ: \"JWT\"\n      }, a),\n      l = r(f),\n      s = function (t) {\n        for (var n = \"\", r = new Uint8Array(t), i = r.byteLength, a = 0; a < i; a++) n += String.fromCharCode(r[a]);\n        return e(btoa(n));\n      }(yield crypto.subtle.sign(u.name, p, l));\n    return \"\".concat(f, \".\").concat(s);\n  });\n  return function (n) {\n    return t.apply(this, arguments);\n  };\n}();\nfunction o(t) {\n  return u.apply(this, arguments);\n}\nfunction u() {\n  return (u = n(function* (t) {\n    var {\n        id: n,\n        privateKey: r,\n        now: e = Math.floor(Date.now() / 1e3)\n      } = t,\n      i = e - 30,\n      o = i + 600,\n      u = {\n        iat: i,\n        exp: o,\n        iss: n\n      };\n    return {\n      appId: n,\n      expiration: o,\n      token: yield a({\n        privateKey: r,\n        payload: u\n      })\n    };\n  })).apply(this, arguments);\n}\nexport { o as githubAppJwt };\n//# sourceMappingURL=index.bundled.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}