{"ast":null,"code":"import _asyncToGenerator from \"/Users/ybezeha/WebstormProjects/new-project/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { AsyncPipe, NgIf } from '@angular/common';\nimport { DestroyRef, inject, signal, WritableSignal } from '@angular/core';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { NonNullableFormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { Router } from '@angular/router';\nimport { catchError, EMPTY, finalize, map, startWith } from 'rxjs';\nimport { AuthService, ErrorService, HttpStatusCode, OctokitGeneralService, RoutesEnum } from 'shared-core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"shared-core\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/progress-spinner\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"@angular/material/button\";\nfunction AuthComponent_mat_spinner_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\");\n  }\n}\nfunction AuthComponent_ng_template_6_button_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function AuthComponent_ng_template_6_button_7_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.clear());\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"close\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AuthComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"h3\", 1);\n    i0.ɵɵtext(1, \"Paste your personal access token\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"form\", 5)(3, \"mat-form-field\")(4, \"mat-label\");\n    i0.ɵɵtext(5, \"Personal access key\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"input\", 6);\n    i0.ɵɵtemplate(7, AuthComponent_ng_template_6_button_7_Template, 3, 0, \"button\", 7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function AuthComponent_ng_template_6_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.submit());\n    });\n    i0.ɵɵpipe(9, \"async\");\n    i0.ɵɵtext(10, \" Submit \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r2.form);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.form.controls.input.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", i0.ɵɵpipeBind1(9, 3, ctx_r2.disabled$));\n  }\n}\nlet AuthComponent = /*#__PURE__*/(() => {\n  var _class;\n  class AuthComponent {\n    constructor(octokitGeneralService, authService, fb, router, errorService) {\n      this.octokitGeneralService = octokitGeneralService;\n      this.authService = authService;\n      this.fb = fb;\n      this.router = router;\n      this.errorService = errorService;\n      this.isLoading = signal(false);\n      this.destroyRef = inject(DestroyRef);\n      this.form = this.fb.group({\n        input: this.fb.control('', Validators.required)\n      });\n      this.disabled$ = this.form.statusChanges.pipe(startWith(this.form.status), map(status => status !== 'VALID'));\n    }\n    submit() {\n      this.isLoading.set(true);\n      this.octokitGeneralService.auth(this.form.controls.input.value).pipe(finalize(() => this.isLoading.set(false)), catchError(result => {\n        this.errorService.setError(result.message);\n        this.form.controls.input.reset();\n        this.authService.setLoggedIn(false);\n        return EMPTY;\n      }), takeUntilDestroyed(this.destroyRef)).subscribe(result => {\n        if (result.status !== HttpStatusCode.Ok) {\n          return;\n        }\n        void this.successAuthActions();\n      });\n    }\n    clear() {\n      this.form.controls.input.reset();\n    }\n    successAuthActions() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        yield _this.router.navigate([RoutesEnum.Home]);\n        _this.authService.setLoggedIn(true);\n      })();\n    }\n  }\n  _class = AuthComponent;\n  _class.ɵfac = function AuthComponent_Factory(t) {\n    return new (t || _class)(i0.ɵɵdirectiveInject(i1.OctokitGeneralService), i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.NonNullableFormBuilder), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i1.ErrorService));\n  };\n  _class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class,\n    selectors: [[\"lib-auth\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 8,\n    vars: 2,\n    consts: [[1, \"auth-page\"], [1, \"title\"], [1, \"form-container\"], [4, \"ngIf\", \"ngIfElse\"], [\"content\", \"\"], [1, \"auth-form\", 3, \"formGroup\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"input\"], [\"matSuffix\", \"\", \"mat-icon-button\", \"\", \"aria-label\", \"Clear\", 3, \"click\", 4, \"ngIf\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 1, \"submit-btn\", 3, \"disabled\", \"click\"], [\"matSuffix\", \"\", \"mat-icon-button\", \"\", \"aria-label\", \"Clear\", 3, \"click\"]],\n    template: function AuthComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\")(2, \"h1\", 1);\n        i0.ɵɵtext(3, \"Log In\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 2);\n        i0.ɵɵtemplate(5, AuthComponent_mat_spinner_5_Template, 1, 0, \"mat-spinner\", 3);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(6, AuthComponent_ng_template_6_Template, 11, 5, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(7);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading())(\"ngIfElse\", _r1);\n      }\n    },\n    dependencies: [MatProgressSpinnerModule, i4.MatProgressSpinner, NgIf, AsyncPipe, MatInputModule, i5.MatInput, i6.MatFormField, i6.MatLabel, i6.MatSuffix, MatIconModule, i7.MatIcon, MatButtonModule, i8.MatButton, i8.MatIconButton, ReactiveFormsModule, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n    styles: [\".auth-page[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;flex-direction:column;height:70%}.form-container[_ngcontent-%COMP%]{padding:40px;border-radius:10px;border:1px solid var(--primary-text-color);width:500px;display:flex;justify-content:center;flex-direction:column;margin-top:20px;align-items:center}.auth-form[_ngcontent-%COMP%], .submit-btn[_ngcontent-%COMP%]{width:100%}.title[_ngcontent-%COMP%]{text-align:center;margin-bottom:20px;color:var(--primary-text-color)}mat-form-field[_ngcontent-%COMP%]{width:100%}\"],\n    changeDetection: 0\n  });\n  return AuthComponent;\n})();\nexport { AuthComponent as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}