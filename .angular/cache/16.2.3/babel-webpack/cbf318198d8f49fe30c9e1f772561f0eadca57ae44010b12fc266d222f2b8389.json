{"ast":null,"code":"import _asyncToGenerator from \"/Users/ybezeha/WebstormProjects/new-project/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { request as defaultRequest } from \"@octokit/request\";\nimport { oauthRequest } from \"./utils\";\nfunction exchangeWebFlowCode(_x) {\n  return _exchangeWebFlowCode.apply(this, arguments);\n}\nfunction _exchangeWebFlowCode() {\n  _exchangeWebFlowCode = _asyncToGenerator(function* (options) {\n    const request = options.request || /* istanbul ignore next: we always pass a custom request in tests */\n    defaultRequest;\n    const response = yield oauthRequest(request, \"POST /login/oauth/access_token\", {\n      client_id: options.clientId,\n      client_secret: options.clientSecret,\n      code: options.code,\n      redirect_uri: options.redirectUrl\n    });\n    const authentication = {\n      clientType: options.clientType,\n      clientId: options.clientId,\n      clientSecret: options.clientSecret,\n      token: response.data.access_token,\n      scopes: response.data.scope.split(/\\s+/).filter(Boolean)\n    };\n    if (options.clientType === \"github-app\") {\n      if (\"refresh_token\" in response.data) {\n        const apiTimeInMs = new Date(response.headers.date).getTime();\n        authentication.refreshToken = response.data.refresh_token, authentication.expiresAt = toTimestamp(apiTimeInMs, response.data.expires_in), authentication.refreshTokenExpiresAt = toTimestamp(apiTimeInMs, response.data.refresh_token_expires_in);\n      }\n      delete authentication.scopes;\n    }\n    return {\n      ...response,\n      authentication\n    };\n  });\n  return _exchangeWebFlowCode.apply(this, arguments);\n}\nfunction toTimestamp(apiTimeInMs, expirationInSeconds) {\n  return new Date(apiTimeInMs + expirationInSeconds * 1e3).toISOString();\n}\nexport { exchangeWebFlowCode };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}