{"ast":null,"code":"import { AsyncPipe, NgIf, NgOptimizedImage } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { NavigationEnd, Router, RouterOutlet } from '@angular/router';\nimport { filter, map } from 'rxjs';\nimport { GitUrlConverterPipe, RoutesEnum } from 'shared-core';\nimport { RepositoryService } from '../../services/repository/repository.service';\nimport { CardActionsComponent } from './card-actions/card-actions.component';\nimport { CardContentComponent } from './card-content/card-content.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/repository/repository.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/card\";\nimport * as i4 from \"@angular/material/button\";\nfunction RepositoryComponent_mat_card_0_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"mat-card-title\", 2);\n    i0.ɵɵtext(2, \"Owner: \");\n    i0.ɵɵelementStart(3, \"span\", 3);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 9);\n    i0.ɵɵelement(6, \"img\", 10);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r1.repository.owner.login);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngSrc\", ctx_r1.repository.owner.avatar_url);\n  }\n}\nfunction RepositoryComponent_mat_card_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-card\", 1)(1, \"mat-card-header\")(2, \"mat-card-title\", 2);\n    i0.ɵɵtext(3, \" Repo name: \");\n    i0.ɵɵelementStart(4, \"span\", 3);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"mat-card-subtitle\")(7, \"a\", 4);\n    i0.ɵɵpipe(8, \"gitUrlConverter\");\n    i0.ɵɵtext(9, \"Check on GitHub\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(10, RepositoryComponent_mat_card_0_div_10_Template, 7, 2, \"div\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"mat-card-content\");\n    i0.ɵɵelement(12, \"lib-card-content\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"mat-card-actions\");\n    i0.ɵɵelement(14, \"lib-card-actions\", 7);\n    i0.ɵɵpipe(15, \"async\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.repository.name, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"href\", i0.ɵɵpipeBind1(8, 5, ctx_r0.repository.git_url), i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.repository.owner);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"repository\", ctx_r0.repository);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"isIssuesRoute\", i0.ɵɵpipeBind1(15, 7, ctx_r0.isIssuesRoute$));\n  }\n}\nexport let RepositoryComponent = /*#__PURE__*/(() => {\n  var _class;\n  class RepositoryComponent {\n    constructor(repositoryService, router) {\n      this.repositoryService = repositoryService;\n      this.router = router;\n      this.routes = RoutesEnum;\n      this.repository = null;\n    }\n    ngOnInit() {\n      this.repository = this.repositoryService.getRepositoryDetails();\n      this.isIssuesRoute$ = this.router.events.pipe(filter(event => event instanceof NavigationEnd), map(event => event.url.includes('issues')));\n    }\n    ngOnDestroy() {\n      this.repositoryService.setRepositoryDetails(null);\n    }\n  }\n  _class = RepositoryComponent;\n  _class.ɵfac = function RepositoryComponent_Factory(t) {\n    return new (t || _class)(i0.ɵɵdirectiveInject(i1.RepositoryService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  _class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class,\n    selectors: [[\"lib-repository\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 2,\n    vars: 1,\n    consts: [[\"class\", \"card\", 4, \"ngIf\"], [1, \"card\"], [1, \"title\"], [1, \"accent\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"target\", \"_blank\", 3, \"href\"], [\"class\", \"avatar-info\", 4, \"ngIf\"], [3, \"repository\"], [3, \"isIssuesRoute\"], [1, \"avatar-info\"], [1, \"avatar-img\"], [\"width\", \"112\", \"height\", \"112\", \"mat-card-md-image\", \"\", \"alt\", \"\", 3, \"ngSrc\"]],\n    template: function RepositoryComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, RepositoryComponent_mat_card_0_Template, 16, 9, \"mat-card\", 0);\n        i0.ɵɵelement(1, \"router-outlet\");\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.repository);\n      }\n    },\n    dependencies: [MatCardModule, i3.MatCard, i3.MatCardActions, i3.MatCardContent, i3.MatCardHeader, i3.MatCardMdImage, i3.MatCardSubtitle, i3.MatCardTitle, CardContentComponent, CardActionsComponent, RouterOutlet, NgOptimizedImage, GitUrlConverterPipe, NgIf, AsyncPipe, MatButtonModule, i4.MatAnchor],\n    styles: [\".card[_ngcontent-%COMP%]{border:1px solid var(--primary-text-color);border-radius:10px}.avatar-info[_ngcontent-%COMP%]{margin-left:auto}.avatar-img[_ngcontent-%COMP%]{border-radius:8px}.title[_ngcontent-%COMP%]{margin-bottom:20px;color:var(--primary-text-color)}\"],\n    changeDetection: 0\n  });\n  return RepositoryComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}