{"ast":null,"code":"import _asyncToGenerator from \"/Users/ybezeha/WebstormProjects/new-project/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { DestroyRef, inject, signal } from '@angular/core';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { catchError, EMPTY, finalize, map } from 'rxjs';\nexport class BaseList {\n  constructor(router, route, errorService) {\n    this.router = router;\n    this.route = route;\n    this.errorService = errorService;\n    this.isLoading = signal(false);\n    this.pageIndex = 0;\n    this.pageSize = 30;\n    this.destroyRef = inject(DestroyRef);\n    const {\n      pageSize\n    } = this.route.snapshot.params;\n    const {\n      pageIndex\n    } = this.route.snapshot.params;\n    if (pageSize && pageIndex) {\n      this.pageSize = pageSize;\n      this.pageIndex = pageIndex;\n    }\n  }\n  fetchData(observable) {\n    this.isLoading.set(true);\n    observable.pipe(map(result => result.data ?? null), catchError(result => {\n      this.errorService.setError(result.message);\n      return EMPTY;\n    }), finalize(() => this.isLoading.set(false)), takeUntilDestroyed(this.destroyRef)).subscribe(result => {\n      this.response = result;\n    });\n  }\n  generalOnPageEvent(pageEvent) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.pageSize = pageEvent.pageSize;\n      _this.pageIndex = pageEvent.pageIndex;\n      const queryParams = {\n        ..._this.route.snapshot.queryParams\n      };\n      // queryParams.pageSize = pageEvent.pageSize;\n      // queryParams.pageIndex = pageEvent.pageIndex;\n      yield _this.router.navigate([], {\n        relativeTo: _this.route,\n        queryParams,\n        queryParamsHandling: 'merge'\n      });\n    })();\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}